<template>
  <div id="covid_main">
    <div class="columns">
      <div class="column">
        <div class="card cv cv-total">
          <div class="card-content">
            <p class="card-title">Tổng số ca mắc</p>
            <p class="card-data">{{ total }}</p>
            <p class="card-subdata">+ {{ newtotal }}</p>
          </div>
        </div>
      </div>
      <div class="column">
        <div class="card cv cv-recover">
          <div class="card-content">
            <p class="card-title">Số ca khỏi</p>
            <p class="card-data">{{ recover }}</p>
            <p class="card-subdata">+ {{ newrecover }}</p>
          </div>
        </div>
      </div>
      <div class="column">
        <div class="card cv cv-death">
          <div class="card-content">
            <p class="card-title">Số ca tử vong</p>
            <p class="card-data">{{ death }}</p>
            <p class="card-subdata">+ {{ newdeath }}</p>
          </div>
        </div>
      </div>
    </div>

    <p id="summary_info"></p>
    <p id="summary_info2"></p>
  </div>
</template>

<script>
import axios from "axios";
import { ref } from "vue";

export default {
  name: "VietnamSummary",
  setup() {
    const total = ref(0);
    const newtotal = ref(0);
    const recover = ref(0);
    const newrecover = ref(0);
    const death = ref(0);
    const newdeath = ref(0);

    const options = {
      method: "GET",
      url: "https://api.npoint.io/344397715d12f676b708",
    };

    axios
      .request(options)
      .then(function(response) {
        console.log(response.data);
        let array = response.data;
        let today = new Date();
        let todayString = today.getDate() + "/" + (today.getMonth() + 1);

        let todayElement = {};
        array.forEach((element) => {
          if (element.day === "17/7") {
            todayElement = element;
            return;
          }
        });

        total.value = todayElement.total_cases_2020.toLocaleString();
        recover.value = todayElement.total_recovered_2020.toLocaleString();
        death.value = todayElement.total_deaths_2020.toLocaleString();
        newtotal.value = todayElement.new_cases.toLocaleString();
        newdeath.value = todayElement.new_deaths.toLocaleString();
        newrecover.value = todayElement.new_recovered.toLocaleString();

        document.getElementById(
          "summary_info"
        ).innerHTML = `Hôm nay <strong>${todayString}</strong>, Việt Nam ghi nhận thêm <strong>${todayElement.new_cases.toLocaleString()}</strong> ca nhiễm mới, trong đó <strong>${todayElement.A.toLocaleString()}</strong> ca trong nước ghi nhận tại <strong>${
          todayElement.city_by_day
        }</strong> tỉnh thành (<strong>${todayElement.community.toLocaleString()}</strong> ca trong cộng đồng, <strong>${todayElement.C.toLocaleString()}</strong> ca ở khu cách ly hoặc khu đã được phong tỏa), <strong>${todayElement.imported.toLocaleString()}</strong> ca nhập cảnh.`;
        document.getElementById(
          "summary_info2"
        ).innerHTML = `Cùng ngày, Bộ Y tế công bố <strong>${todayElement.new_recovered}</strong> người khỏi bệnh và <strong>${todayElement.new_deaths}</strong> người tử vong.`;
      })
      .catch(function(error) {
        console.error(error);
      });

    return {
      total,
      newtotal,
      recover,
      newrecover,
      death,
      newdeath,
    };
  },
};
</script>

<style scoped>
#covid_main {
  width: 90%;
  margin: auto;
}

.columns {
  margin: 0;
}

.card-content {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.cv-total {
  color: rgb(0, 11, 112);
}

.cv-recover {
  color: rgb(0, 109, 42);
}

.cv-death {
  color: rgb(131, 0, 0);
}

.card-data {
  font-weight: bold;
  font-size: 1.4rem;
}

.card-subdata {
  font-size: 0.8rem;
}

#summary_info {
  padding: 15px;
}

#summary_info2 {
  padding: 0px 15px 15px 15px;
}
</style>
